// clearfix
// ------------------

@mixin clearfix {
    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }

}

// trimmed text using @extend - add `@extend ellipsis` to all selectors that require the trimmed text.
// @extend ellipsis;
// ------------------

%ellipsis {
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// vertically centered elements
// ------------------

@mixin place-center {
    position: absolute;
    @include translate(0, -50%);
    top: 50%;
}

// Mixin for absollute positioned elements
//.abs { @include abs-pos(10px, 10px, 5px, 15px); }
// ------------------


@mixin position-absolute ($top: auto, $right: auto, $bottom: auto, $left: auto) {
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    position: absolute;
}

// Placeholder
//input{ @include placeholder-color(#FA4A4A) }
// ------------------

@mixin placeholder-color($color){
    &.placeholder{
        color: $color
    }

    &:-moz-placeholder{
        color: $color
    }

    &::-webkit-input-placeholder{
        color: $color
    }

    &:-ms-input-placeholder{
        color: $color
    }
}


// Responsive breakpoints
//.foo {
//    width: 100%;
//    @include breakpoint(large) { width: 80%; }
//    @include breakpoint(medium) { width: 60%; }
//    @include breakpoint(small) { width: 90%; }
//}
// ------------------

@mixin breakpoint($point) {
    @if $point == xsmall {
        @media (min-width: $xsmall)  { @content; }
    }

    @else if $point == small {
        @media (min-width: $small)  { @content; }
    }

    @else if $point == medium {
        @media (min-width: $medium) { @content; }
    }

    @else if $point == large {
        @media (min-width: $large) { @content; }
    }

    @else if $point == xlarge {
        @media (min-width: $xlarge) { @content; }
    }

    @else if $point == high-density {
        @media only screen and (-webkit-min-device-pixel-ratio: 1.5),
            only screen and (min--moz-device-pixel-ratio: 1.5),
            only screen and (-o-min-device-pixel-ratio: 3/2),
            only screen and (min-device-pixel-ratio: 1.5) { @content; }
    }
}

// --------------------------

// icons

@mixin icon-small-boundary {
  width: 16px;
  height: auto;
}

@mixin icon-medium-boundary {
  width: 24px;
  height: auto;
}

@mixin icon-large-boundary {
  width: 30px;
  height: auto;
}


@mixin icon-xlarge-boundary {
  width: 100px;
  height: auto;
}
//------------------------------------------

/// Buttons + Sizes

/// @param {Number} $padding-vertical `padding`
/// @param {Number} $padding-horizontal `padding`
/// @param {Number} $font-size
/// @param {Number} $line-height
/// @param {Number} $border-radius
/// @example
/// //SCSS
/// .foo-button{
/// 	@include button-size(5px,15px,13px,1.5,null);
///	}

@mixin button-size($padding-vertical,$padding-horizontal,$font-size,$line-height,$border-radius){
	padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
	line-height: $line-height;
	border-radius: $border-radius;
}

/// Button variants

/// @param {String} $color
/// @param {String} $background
/// @param {String} $border-color
/// @example
/// //SCSS
/// .foo-button {
///  	@include button-variant(#fff,#f36,#f36);
///	}
///	//CSS
///	.foo-button {
///		color: #fff;
///		background-color: #f36;
///		border-color: #f36;
///		transition: all .2s ease;
///	}
///	.foo-button:hover,
///	.foo-button:focus,
///	.foo-button:active {
///  	color: #fff;
///	  	background-color: #ff245b;
///  	border-color: #ff1a53;
///	}
///	.foo-button[disabled],
///	.foo-button[disabled]:hover,
///	.foo-button[disabled]:focus,
///	.foo-button[disabled]:active,
///	fieldset[disabled] .btn,
///	fieldset[disabled] .btn:hover,
///	fieldset[disabled] .btn:focus,
///	fieldset[disabled] .btn:active {
///	  	background-color: #f36;
///  	border-color: #f36;
///	}

@mixin button-variant($color,$background,$border-color){
	color: $color;
	background-color: $background;
	border-color: $border-color;
	transition: all .2s ease;

	&:hover,
	&:focus,
	&:active {
		color: $color;
		background-color: darken($background, 10%);
		border-color: darken($border-color, 8%);
	}

	&[disabled],
	fieldset[disabled] & {
		&,
		&:hover,
		&:focus,
		&:active {
      background-color: lighten($background, 20%);
  		border-color: lighten($border-color, 16%);
		}
	}
}

//---------------------------------------------------------

// Bem syntax

/// @link https://medium.com/@marcmintel/pushing-bem-to-the-next-level-with-sass-3-4-5239d2371321

$elementSeparator: '__';

$modifierSeparator: '--';


@function containsModifier($selector) {
    $selector: selectorToString($selector);
    @if str-index($selector, $modifierSeparator) {
        @return true;
    } @else {
        @return false;
    }
}


@function selectorToString($selector) {
    $selector: inspect($selector);
    $selector: str-slice($selector, 2, -2);
    @return $selector;
}


@function getBlock($selector) {
    $selector: selectorToString($selector);
    $modifierStart: str-index($selector, $modifierSeparator) - 1;
    @return str-slice($selector, 0, $modifierStart);
}


@mixin b($block) {
    .#{$block} {
        @content;
    }
}

@mixin e($element) {
    $selector: &;
    @if containsModifier($selector) {
        $block: getBlock($selector);
        @at-root {
            #{$selector} {
                #{$block+$elementSeparator+$element} {
                    @content;
                }
            }
        }
    } @else {
        @at-root {
            #{$selector+$elementSeparator+$element} {
                @content;
            }
        }
    }
}


@mixin m($modifier) {
    @at-root {
        #{&}#{$modifierSeparator+$modifier} {
            @content;
        }
    }
}

///  //SCSS
///  @include b(card) {
///     background: red;
///     @include e(head){
///         font-size: 14px;
///
///         @include m(large) {
///             font-size: 18px;
///         }
///     };
///  }
///  //CSS
///  .card {
///      background: red;
///  }
///  .card__head {
///     font-size: 14px;
///  }
///  .card__head--large {
///     font-size: 18px;
///  }

//------------------------------------------------------------

// Calc mixin


/// //SCSS
/// .calc{
/// 	 @include calc(width,'100% - 20px');
///	}
/// //CSS
/// .calc {
///		width: calc(100% - 20px);
///	}

@mixin calc($prop, $val) {
  #{$prop}: calc(#{$val});
}

// ---------------------------------------------------------------


// Alert messges
/// //SCSS
///
/// .alert{
/// 	@include alert-variant(#f36,darken(#f36,5%),#333);
/// }


@mixin alert-variant($background, $border, $text-color) {
  background-color: $background;
  border-color: $border;
  color: $text-color;
}


// -----------------------------------------------------------------
